GeneratedReports/
ReportPlugins/
node_modules/
npm-debug.log
*.js.map
*.css.map
*.scss.map
*.orig
._*
.build/
*.bak
*.binlog

# Build output
[Bb]in/
[Oo]bj/
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
bld/
artifacts/
dist/
.awcache/

*.dll
*.exe

# Roslyn cache directories
*.ide/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

#NUNIT
*.VisualState.xml
TestResult.xml

# Temp and user files
.idea/
.vs/
.vscode/
.DS_Store
*.iml
*.sublime-*
Thumbs.db
*.user
*.DS_Store
*.cer
*.pfx
*.swp
*.suo
*.userosscache
*.sln.docstates
*project.lock.json
*.nuget.props
*.nuget.targets
*.tmp_proj

# Visual Studio profiler
*.psess
*.vsp
*.vspx

# Web workbench (sass)
.sass-cache/

 NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# If using the old MSBuild-Integrated Package Restore, uncomment this:
#!**/packages/repositories.config

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
node_modules/
.vs/
*.log
*.zip
publish/

src/StudentPortal/yarn.lock
src/WebAssess/package-lock.json
src/StudentPortal/package-lock.json
src/StudentCheckIn/#.##
src/StudentCheckIn/package-lock.json
